openapi: 3.0.0
info:
  title: Cookbook-OpenAPI
  version: '1.0'
  contact:
    name: Chef
    url: low_calory_cookbook.com
    email: colory_master@gmail.com
  license:
    name: GNU General Public License v3.0
  description: Retrieve low-calory recipes.
servers:
  - url: 'http://localhost:3000'
paths:
  '/recipes/{recipeId}/ingredients':
    parameters:
      - $ref: '#/components/parameters/recipeId'
    get:
      summary: GET
      tags: []
      operationId: get-recipes-ingredients
      description: Retreive the list of ingredients for a specific recipe.
      parameters:
        - schema:
            type: string
            enum:
              - metric
              - imperial
            default: metric
          in: query
          name: units
          description: 'If **weight** is chosen, display the units as **metric** or **imperial**. '
        - schema:
            type: string
            default: weight
            enum:
              - weight
              - volume
          in: query
          name: amount
          description: Display the amount of ingredient needed as a **weight** (e.g. grams/ounces) or as a **volume** measured in cups and spoons. Note that ingredients that do not conform to these categories will be presented in a customised manner e.g. a pinch of salt.
      responses:
        '200':
          description: The length of the ingredient array will vary depending on the number of ingredients in the recipe.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
        '404':
          $ref: '#/components/responses/404'
  /recipes:
    get:
      summary: GET endpoint
      tags:
        - recipes
      operationId: get-recipes
      parameters:
        - schema:
            type: array
            example:
              - '[0,200]'
          in: query
          name: calories
          description: 'Range of calories from min to max. '
        - schema:
            type: integer
            example: 60
          in: query
          name: time
          description: Max. preparation time in minutes.
        - schema:
            type: string
            example: Banana and yoghurt parfait
            maxLength: 50
          in: query
          name: name
          description: Search for word/s present in the recipe title. Separate multiple search terms with commas. Search can include grep patterns.
        - schema:
            type: string
          in: query
          name: ingredient
          description: 'Search for a recipe with a specific ingredient. Separate multiple search terms with commas. Search can include grep patterns. '
        - schema:
            type: string
            enum:
              - vegan
              - mediterranean
              - vegetarian
            example: vegan
          in: query
          name: type
          description: 'Tag defining a subset of recipes by cuisine or diet. For a full list of tags see: www.some-link-to-tags.com'
      description: |-
        Search for recipes based on {name}, {ingredient}, {calories} or preparation {time}.

        If no query parameter is set a list of all recipes (paginated) will be returned sorted by recipe id.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/recipeSummary'
          description: 'Returns a list of recipes that match the search query. The summary includes a name, photo, description, the total calories and preparation time. '
        '404':
          $ref: '#/components/responses/404'
    parameters: []
  '/recipes/{recipeId}/preparation':
    parameters:
      - $ref: '#/components/parameters/recipeId'
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
      operationId: get-recipes-id-methods
      description: Retrieve the methods for a specific recipe.
  '/recipes/{recipeId}':
    parameters:
      - $ref: '#/components/parameters/recipeId'
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/200-summary'
        '404':
          $ref: '#/components/responses/404'
      operationId: get-recipes-id
      description: 'Retrieve the summary for a specific recipe. Returns a name, image, description, the total calories and preparation time. '
components:
  schemas:
    Ingredient:
      title: Ingredient
      type: object
      properties:
        positionId:
          type: integer
          description: The position of the ingredient in the list.
          format: int64
        productID:
          type: string
          description: The unique identifier of the product. This links to the Product API.
          example: MILK
        amount:
          type: integer
          example: 50
          description: 'Amount of the product needed. Default: metric (grams)'
      x-examples: {}
    recipeSummary:
      title: recipeSummary
      type: object
      properties:
        recipeId:
          type: integer
          description: Unique recipe identifier.
          example: 0
          format: int64
          minimum: 0
        name:
          description: Title of the recipe.
          example: Banana and yoghurt parfait
          type: string
        photo:
          type: string
          description: Image of the prepared recipe.
          format: image/*
        description:
          type: string
          description: Short paragraph describing the recipe.
          example: Delicious creamy sweet treat with a hint of cinnamon.
        type:
          type: string
          description: Any diet or cuisine sub-categories the recipe is assigned to.
          example: vegan
          enum:
            - vegan
            - vegetarian
        calories:
          type: string
          description: The total calories.
          example: '100'
        time:
          type: string
          description: The estimated preparation time in minutes.
          example: '2'
      x-examples:
        Banana and yoghurt parfait:
          recipeId: 0
          name: Banana and yoghurt parfait
          photo: string
          description: Delicious creamy sweet treat with a hint of cinnamon.
          type: vegan
          calories: '100'
          time: '2'
  parameters:
    recipeId:
      name: recipeId
      in: path
      required: true
      schema:
        type: integer
        minimum: 0
        format: int64
        example: 0
      description: Unique recipe identifier.
  responses:
    '404':
      description: Recipe not found.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Recipe not found
          examples:
            Recipe not found:
              value:
                message: Recipe not found
    200-summary:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              recipeId:
                type: integer
                description: Unique recipe identifier.
                example: 0
                format: int64
                minimum: 0
              name:
                description: Title of the recipe.
                example: Banana and yoghurt parfait
                type: string
              photo:
                type: string
                description: Image of the prepared recipe.
                format: image/*
              description:
                type: string
                description: Short paragraph describing the recipe.
                example: Delicious creamy sweet treat with a hint of cinnamon.
              type:
                type: string
                description: Any diet or cuisine sub-categories the recipe is assigned to.
                example: vegan
                enum:
                  - vegan
                  - vegetarian
              calories:
                type: string
                description: The total calories.
                example: '100'
              time:
                type: string
                description: The estimated preparation time in minutes.
                example: '2'
            required:
              - recipeId
              - name
          examples:
            Banana and yoghurt parfait:
              value:
                recipeId: 0
                name: Banana and yoghurt parfait
                photo: string
                description: Delicious creamy sweet treat with a hint of cinnamon.
                type: vegan
                calories: '100'
                time: '2'
  examples: {}
tags:
  - name: recipes
